// COMMON MONGOOSE COMMANDS //

// Create a Schema for Users
var UserSchema = new mongoose.Schema({
	name: {type: String},
	age: {type: Number}
}, {timestamps: true})

// Store the Schema under the name 'User'
mongoose.model('User', UserSchema);

// Retrieve the Schema called 'User' and store it to the variable User
var User = mongoose.model('User');


// FINDING ALL USERS //

// Using the User Schema...
// ...retrieve all records matching {}
User.find({}, function(err, users) {
	// Retrieve an array of users
	// This code will run when the DB is done attempting to retrieve all matching records to {}
})
``

// FINDING ALL USERS BASED ON A REQUIREMENT //

// Retrieve all records matching {name: 'Jessica'}
User.find({name: 'Jessica'}, function(err, users){
	// Retrieve an array of users matching the name. Even if 1 record is found, the result will be an array
	// This code will run when the DB is done attempting to retrieve all matching records to {name: 'Jessica'}
})


// FINDING ONE USER //

// Retrieve 1 record (the first record foud) matching {}
User.findOne({}, function(err, user){
	// Retrieve 1 object
	// This code will run when the DB is done attempting to retrieve 1 record
})



// LET'S CREATE A SAMPLE USER //

var userInstance = new User()
userInstance.name = 'Tom'
userInstance.age = 30
userInstance.save(function(err)){
	// This code will run when Mongo has attempted to save the record.
 // If (err) exists, the record was not saved, and (err) contains validation errors.
 // If (err) does not exist (undefined), Mongo saved the record successfully.
}


// DELETE ALL USERS //

User.remove({}, function(err){
	// This code will run when the DB has attempted to remove all matching records to {}
})


// DELETE ONE USER //

User.remove({_id: 'insert record unique id here'}, function(err){
	// This code will run when the DB has attempted to remove one matching record to {_id: 'insert record unique id here'}
})


// UPDATE ANY RECORDS //

// ...update any records that match the query
User.update({name:'Andrinnna'}, {name:'Andriana'}, function(err){
 // This code will run when the DB has attempted to update the matching record.
})
// another way to update a record
User.find({name: 'Andriana'}, function(err, user){
 user.name = 'Andri'
 user.save(function(err){
     // if save was successful awesome!
 })
})